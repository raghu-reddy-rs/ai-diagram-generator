export declare const queryGo = "\n; For repomix\n(comment) @comment\n(package_clause) @definition.package\n(import_declaration) @definition.import\n(import_spec) @definition.import\n(var_declaration) @definition.variable\n(const_declaration) @definition.constant\n\n; tree-sitter-go\n(\n  (comment)* @doc\n  .\n  (function_declaration\n    name: (identifier) @name) @definition.function\n  (#strip! @doc \"^//\\\\s*\")\n  (#set-adjacent! @doc @definition.function)\n)\n\n(\n  (comment)* @doc\n  .\n  (method_declaration\n    name: (field_identifier) @name) @definition.method\n  (#strip! @doc \"^//\\\\s*\")\n  (#set-adjacent! @doc @definition.method)\n)\n\n(call_expression\n  function: [\n    (identifier) @name\n    (parenthesized_expression (identifier) @name)\n    (selector_expression field: (field_identifier) @name)\n    (parenthesized_expression (selector_expression field: (field_identifier) @name))\n  ]) @reference.call\n\n(type_spec\n  name: (type_identifier) @name) @definition.type\n\n(type_identifier) @name @reference.type\n\n(package_clause \"package\" (package_identifier) @name)\n\n(type_declaration (type_spec name: (type_identifier) @name type: (interface_type)))\n\n(type_declaration (type_spec name: (type_identifier) @name type: (struct_type)))\n\n; Import statements\n(import_declaration\n  (import_spec_list\n    (import_spec\n      path: (interpreted_string_literal) @name.reference.module))) @definition.import\n\n(import_declaration\n  (import_spec\n    path: (interpreted_string_literal) @name.reference.module)) @definition.import\n\n(package_clause\n  (package_identifier) @name.reference.module) @definition.package\n\n(var_declaration (var_spec name: (identifier) @name))\n\n(const_declaration (const_spec name: (identifier) @name))\n";
//# sourceMappingURL=queryGo.d.ts.map