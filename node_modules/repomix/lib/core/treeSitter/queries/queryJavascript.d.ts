export declare const queryJavascript = "\n(comment) @comment\n\n(\n  (comment)* @doc\n  .\n  (method_definition\n    name: (property_identifier) @name.definition.method) @definition.method\n  (#not-eq? @name.definition.method \"constructor\")\n  (#strip! @doc \"^[\\s\\*/]+|^[\\s\\*/]$\")\n  (#select-adjacent! @doc @definition.method)\n)\n\n(\n  (comment)* @doc\n  .\n  [\n    (class\n      name: (_) @name.definition.class)\n    (class_declaration\n      name: (_) @name.definition.class)\n  ] @definition.class\n  (#strip! @doc \"^[\\s\\*/]+|^[\\s\\*/]$\")\n  (#select-adjacent! @doc @definition.class)\n)\n\n(\n  (comment)* @doc\n  .\n  [\n    (function_declaration\n      name: (identifier) @name.definition.function)\n    (generator_function\n      name: (identifier) @name.definition.function)\n    (generator_function_declaration\n      name: (identifier) @name.definition.function)\n  ] @definition.function\n  (#strip! @doc \"^[\\s\\*/]+|^[\\s\\*/]$\")\n  (#select-adjacent! @doc @definition.function)\n)\n\n(\n  (comment)* @doc\n  .\n  (lexical_declaration\n    (variable_declarator\n      name: (identifier) @name.definition.function\n      value: [(arrow_function) (function_declaration)]) @definition.function)\n  (#strip! @doc \"^[\\s\\*/]+|^[\\s\\*/]$\")\n  (#select-adjacent! @doc @definition.function)\n)\n\n(\n  (comment)* @doc\n  .\n  (variable_declaration\n    (variable_declarator\n      name: (identifier) @name.definition.function\n      value: [(arrow_function) (function_declaration)]) @definition.function)\n  (#strip! @doc \"^[\\s\\*/]+|^[\\s\\*/]$\")\n  (#select-adjacent! @doc @definition.function)\n)\n\n(assignment_expression\n  left: [\n    (identifier) @name.definition.function\n    (member_expression\n      property: (property_identifier) @name.definition.function)\n  ]\n  right: [(arrow_function) (function_declaration)]\n) @definition.function\n\n(pair\n  key: (property_identifier) @name.definition.function\n  value: [(arrow_function) (function_declaration)]) @definition.function\n\n(\n  (call_expression\n    function: (identifier) @name.reference.call) @reference.call\n  (#not-match? @name.reference.call \"^(require)$\")\n)\n\n(call_expression\n  function: (member_expression\n    property: (property_identifier) @name.reference.call)\n  arguments: (_) @reference.call)\n\n(new_expression\n  constructor: (_) @name.reference.class) @reference.class\n";
//# sourceMappingURL=queryJavascript.d.ts.map