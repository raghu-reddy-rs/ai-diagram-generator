export declare const queryRust = "\n(line_comment) @comment\n(block_comment) @comment\n\n; Import statements\n(use_declaration\n  (scoped_identifier) @name.reference.module) @definition.import\n\n(use_declaration\n  (identifier) @name.reference.module) @definition.import\n\n(extern_crate_declaration\n  (identifier) @name.reference.module) @definition.import\n\n; ADT definitions\n\n(struct_item\n    name: (type_identifier) @name.definition.class) @definition.class\n\n(enum_item\n    name: (type_identifier) @name.definition.class) @definition.class\n\n(union_item\n    name: (type_identifier) @name.definition.class) @definition.class\n\n; type aliases\n\n(type_item\n    name: (type_identifier) @name.definition.class) @definition.class\n\n; method definitions\n\n(declaration_list\n    (function_item\n        name: (identifier) @name.definition.method)) @definition.method\n\n; function definitions\n\n(function_item\n    name: (identifier) @name.definition.function) @definition.function\n\n; trait definitions\n(trait_item\n    name: (type_identifier) @name.definition.interface) @definition.interface\n\n; module definitions\n(mod_item\n    name: (identifier) @name.definition.module) @definition.module\n\n; macro definitions\n\n(macro_definition\n    name: (identifier) @name.definition.macro) @definition.macro\n\n; references\n\n(call_expression\n    function: (identifier) @name.reference.call) @reference.call\n\n(call_expression\n    function: (field_expression\n        field: (field_identifier) @name.reference.call)) @reference.call\n\n(macro_invocation\n    macro: (identifier) @name.reference.call) @reference.call\n\n; implementations\n\n(impl_item\n    trait: (type_identifier) @name.reference.implementation) @reference.implementation\n\n(impl_item\n    type: (type_identifier) @name.reference.implementation\n    !trait) @reference.implementation\n";
//# sourceMappingURL=queryRust.d.ts.map