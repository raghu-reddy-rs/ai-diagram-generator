import type { RepomixConfigMerged } from '../../config/configSchema.js';
import type { RepomixProgressCallback } from '../../shared/types.js';
import type { RawFile } from '../file/fileTypes.js';
import type { GitDiffResult } from '../git/gitDiffHandle.js';
import type { GitLogResult } from '../git/gitLogHandle.js';
import { type SuspiciousFileResult } from './securityCheck.js';
export declare const validateFileSafety: (rawFiles: RawFile[], progressCallback: RepomixProgressCallback, config: RepomixConfigMerged, gitDiffResult?: GitDiffResult, gitLogResult?: GitLogResult, deps?: {
    runSecurityCheck: (rawFiles: RawFile[], progressCallback?: RepomixProgressCallback, gitDiffResult?: GitDiffResult, gitLogResult?: GitLogResult, deps?: {
        initTaskRunner: <T, R>(options: import("../../shared/processConcurrency.js").WorkerOptions) => import("../../shared/processConcurrency.js").TaskRunner<T, R>;
    }) => Promise<SuspiciousFileResult[]>;
    filterOutUntrustedFiles: (rawFiles: RawFile[], suspiciousFilesResults: SuspiciousFileResult[]) => RawFile[];
}) => Promise<{
    safeRawFiles: RawFile[];
    safeFilePaths: string[];
    suspiciousFilesResults: SuspiciousFileResult[];
    suspiciousGitDiffResults: SuspiciousFileResult[];
    suspiciousGitLogResults: SuspiciousFileResult[];
}>;
//# sourceMappingURL=validateFileSafety.d.ts.map