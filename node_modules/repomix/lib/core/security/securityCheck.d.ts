import type { RepomixProgressCallback } from '../../shared/types.js';
import type { RawFile } from '../file/fileTypes.js';
import type { GitDiffResult } from '../git/gitDiffHandle.js';
import type { GitLogResult } from '../git/gitLogHandle.js';
import type { SecurityCheckType } from './workers/securityCheckWorker.js';
export interface SuspiciousFileResult {
    filePath: string;
    messages: string[];
    type: SecurityCheckType;
}
export declare const runSecurityCheck: (rawFiles: RawFile[], progressCallback?: RepomixProgressCallback, gitDiffResult?: GitDiffResult, gitLogResult?: GitLogResult, deps?: {
    initTaskRunner: <T, R>(options: import("../../shared/processConcurrency.js").WorkerOptions) => import("../../shared/processConcurrency.js").TaskRunner<T, R>;
}) => Promise<SuspiciousFileResult[]>;
//# sourceMappingURL=securityCheck.d.ts.map