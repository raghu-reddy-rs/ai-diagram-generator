import type { GitHubRepoInfo } from './gitRemoteParse.js';
/**
 * Constructs GitHub archive download URL
 * Format: https://github.com/owner/repo/archive/refs/heads/branch.zip
 * For tags: https://github.com/owner/repo/archive/refs/tags/tag.zip
 * For commits: https://github.com/owner/repo/archive/commit.zip
 */
export declare const buildGitHubArchiveUrl: (repoInfo: GitHubRepoInfo) => string;
/**
 * Builds alternative archive URL for master branch as fallback
 */
export declare const buildGitHubMasterArchiveUrl: (repoInfo: GitHubRepoInfo) => string | null;
/**
 * Builds alternative archive URL for tags
 */
export declare const buildGitHubTagArchiveUrl: (repoInfo: GitHubRepoInfo) => string | null;
/**
 * Gets the expected archive filename from GitHub
 * Format: repo-branch.zip or repo-sha.zip
 */
export declare const getArchiveFilename: (repoInfo: GitHubRepoInfo) => string;
/**
 * Checks if a response indicates a GitHub API rate limit or error
 */
export declare const checkGitHubResponse: (response: Response) => void;
//# sourceMappingURL=gitHubArchiveApi.d.ts.map