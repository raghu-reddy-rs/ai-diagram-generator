import type { TiktokenEncoding } from 'tiktoken';
import type { RepomixProgressCallback } from '../../shared/types.js';
import type { ProcessedFile } from '../file/fileTypes.js';
import type { FileMetrics } from './workers/types.js';
export declare const calculateSelectiveFileMetrics: (processedFiles: ProcessedFile[], targetFilePaths: string[], tokenCounterEncoding: TiktokenEncoding, progressCallback: RepomixProgressCallback, deps?: {
    initTaskRunner: <T, R>(options: import("../../shared/processConcurrency.js").WorkerOptions) => import("../../shared/processConcurrency.js").TaskRunner<T, R>;
}) => Promise<FileMetrics[]>;
//# sourceMappingURL=calculateSelectiveFileMetrics.d.ts.map