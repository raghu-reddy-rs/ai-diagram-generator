import type { RepomixConfigMerged } from '../../config/configSchema.js';
import type { RepomixProgressCallback } from '../../shared/types.js';
import type { RawFile } from './fileTypes.js';
import type { SkippedFileInfo } from './workers/fileCollectWorker.js';
export interface FileCollectResults {
    rawFiles: RawFile[];
    skippedFiles: SkippedFileInfo[];
}
export type { SkippedFileInfo } from './workers/fileCollectWorker.js';
export declare const collectFiles: (filePaths: string[], rootDir: string, config: RepomixConfigMerged, progressCallback?: RepomixProgressCallback, deps?: {
    initTaskRunner: <T, R>(options: import("../../shared/processConcurrency.js").WorkerOptions) => import("../../shared/processConcurrency.js").TaskRunner<T, R>;
}) => Promise<FileCollectResults>;
//# sourceMappingURL=fileCollect.d.ts.map